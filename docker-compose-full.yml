version: '3.7'

services:
  mysql:
    image: mysql:5.7.24
    container_name: mysql
    volumes:
      - mysqldata:/usr/share/mysql/data
      - "./script/sql/001_schema.sql:/docker-entrypoint-initdb.d/001_schema.sql"
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: classicmodels
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root

  tdm-service:
    container_name: tdm-service
    image: "docker.io/library/tdm:0.0.1-SNAPSHOT"
    environment:
      spring.jpa.show-sql: "true"
      spring.datasource.url: jdbc:mysql://mysql:3306/classicmodels?enabledTLSProtocols=TLSv1.2&useSSL=false
      spring.datasource.username: root
      spring.datasource.password: root
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mysql
    restart: on-failure

  tdm-data-generator-service:
    container_name: tdm-data-generator-service
    image: "docker.io/library/tdm-data-generator:0.0.1-SNAPSHOT"
    environment:
      spring.jpa.show-sql: "true"
      spring.datasource.url: jdbc:mysql://mysql:3306/classicmodels?enabledTLSProtocols=TLSv1.2&useSSL=false
      spring.datasource.username: root
      spring.datasource.password: root
      generator.real-data-enabled: "true"
    ports:
      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mysql
    restart: on-failure

volumes:
  mysqldata:
    driver: local